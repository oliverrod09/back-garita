// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  name String 
  email String @unique
  salt String
  hash String
  cedula String @unique
  createdAt DateTime @default(now())
  residence Residences @relation(fields: [residenceIdenti], references: [identifier])
  residenceIdenti String
  invitations Invitations[]
  guests Guests[]
}

model Residences {
  id Int @id @default(autoincrement())
  number String
  address String
  identifier String @unique
  createdAt DateTime @default(now())
  users User[]
  invitations Invitations[]
}

model Invitations {
  id Int @id @default(autoincrement())
  cod String
  name String
  cedula String
  cellphone String?
  board String?
  description String?
  used Boolean @default(false)
  createdAt DateTime @default(now())
  expiresAt DateTime @default(now())
  user User @relation(fields: [userId], references: [id])
  userId Int
  residence Residences @relation(fields: [residenceId], references: [id])
  residenceId Int
}

model Guests {
  id Int @id @default(autoincrement())
  name String
  cedula String @unique
  cellphone String?
  createdAt DateTime @default(now())
  user User @relation(fields: [userId], references: [id])
  userId Int
}

model Role {
  id Int @id @default(autoincrement())
  name String
  controls Controls[] // Establecer la relaci√≥n con la tabla Controls
}

model Controls {
  id Int @id @default(autoincrement())
  name String
  email String @unique
  roleId Int
  role Role @relation(fields: [roleId], references: [id])
  salt String
  hash String
  cedula String @unique
  createdAt DateTime @default(now())
}

